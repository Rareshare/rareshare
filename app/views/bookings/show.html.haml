- nav_category "Bookings"

- content_for :head do
  :javascript
    $(function() {
      window.questions = new Questions({ questions: #{@booking.questions.to_json} });
      ko.applyBindings({ questions: questions }, $("div#questions")[0]);
    });

= page_header @booking.title,
  icon: "cogs",
  crumbs: [:root, Booking, @booking],
  subtitle: @booking.display_name

%div.row
  %div.span2.header-avatar
    = avatar_of @booking.opposite_party_to(current_user)

  %div.span8
    %div.well.well-small
      %p= @booking.state_summary_for(current_user)
      = render partial: 'bookings/actions', locals: { booking: @booking }

      %br

      #edit_requests
        - if @booking.owner?(current_user)
          - if @booking.booking_edit_requests.any?
            %table#booking_edit_requests
              %tbody
                %tr
                  %b Your previous edit requests
                %tr
                  %td.span2= "Adjusted #{@booking.tool.unit.pluralize}"
                  %td.span6 Memo
                  %td.span3 Status/Action

                - @booking.booking_edit_requests.reverse.each do |edit_request|
                  %tr
                    %td= edit_request.adjustment
                    %td= edit_request.memo
                    - if edit_request.accepted?
                      %td Accepted
                    - elsif edit_request.declined?
                      %td Declined
                    - else
                      %td
                        = link_to "Edit", edit_booking_edit_request_path(edit_request), remote: true, class: 'btn btn-success'
                        = link_to "Cancel", booking_edit_request_path(edit_request), method: :delete, class: "btn btn-danger"
        - elsif @booking.booking_edit_requests.any?
          %table#booking_edit_requests
            %tbody
              %tr
                %b Previous edit requests
              %tr
                %td.span2= "Adjusted #{@booking.tool.unit.pluralize}"
                %td.span6 Memo
                %td.span3 Status/Action

              - @booking.booking_edit_requests.reverse.each do |edit_request|
                %tr
                  %td= edit_request.adjustment
                  %td= edit_request.memo
                  - if edit_request.accepted?
                    %td Accepted
                  - elsif edit_request.declined?
                    %td Declined
                  - else
                    %td
                      = link_to "Accept", check_booking_edit_request_path(edit_request), remote: :true, class: 'btn btn-success'
                      = link_to "Decline", decline_booking_edit_request_path(edit_request), method: :patch, class: "btn btn-danger"
      %br
      #edits
        - if @booking.owner?(current_user)
          - if @booking.booking_edits.any?
            %table#booking_edits
              %tbody
                %tr
                  %td
                    %b Your previous edits
                %tr
                  %td.span3 Adjusted price
                  %td.span6 Memo
                  %td.span3 Status/Action

                - @booking.booking_edits.reverse.each do |edit|
                  %tr
                    %td= number_to_currency(edit.change_amount, unit: currency_for(@booking))
                    %td= edit.memo
                    - if edit.confirmed?
                      %td Confirmed
                    - elsif edit.declined?
                      %td Declined
                    - else

                      %td
                        = link_to "Edit", edit_booking_edit_path(edit), remote: true, class: 'btn btn-success'
                        = link_to "Cancel", booking_edit_path(edit), method: :delete, class: "btn btn-danger"
                        
        - elsif @booking.booking_edits
          %table#booking_edits
            %tbody
              %tr
                %td
                  %b Previous edits
              %tr
                %td.span2 Adjusted price
                %td.span6 Memo
                %td.span3 Status/Action

              - @booking.booking_edits.reverse.each do |edit|
                %tr
                  %td= number_to_currency(edit.change_amount, unit: currency_for(@booking))
                  %td= edit.memo
                  - if edit.confirmed?
                    %td Confirmed
                  - elsif edit.declined?
                    %td Declined
                  - else
                    %td
                      = link_to "Confirm", confirm_booking_edit_path(edit), method: :patch, class: 'btn btn-success'
                      = link_to "Decline", decline_booking_edit_path(edit), method: :patch, class: "btn btn-danger"

    %h3 Booking Information
    = render partial: "summary", locals: { booking: @booking }

    %h3
      Tool Overview
      %small= link_to glyph_text("Tool Details", :angle_right), tool_path(@booking.tool)
    %table.table
      %tbody
        %tr
          %th.span3 Category
          %td.span5
            = link_to search_path(q: @booking.tool.tool_category_name) do
              = @booking.tool.tool_category_name
        %tr
          %th Manufacturer
          %td
            = link_to search_path(q: @booking.tool.manufacturer_name) do
              = @booking.tool.manufacturer_name
        %tr
          %th Model
          %td
            = link_to search_path(q: @booking.tool.model_name) do
              = @booking.tool.model_name
        %tr
          %th Year manufactured
          %td= @booking.tool.year_manufactured
        %tr
          %th Resolution
          %td= @booking.tool.resolution
        -#%tr
        -#  %th Sample size
        -#  %td
        -#    10
        -#    %sup= @booking.tool.sample_size_min
        -#    to 10
        -#    %sup= @booking.tool.sample_size_max

    - if @booking.tool.images.any?
      = render partial: "tools/images", object: @booking.tool.images

%div.row
  %div.span8.offset2
    %h3 Address
    %h4.address
      %strong
        = @booking.public_address
    %iframe{width: "100%", height: "350", frameborder: "0", scrolling: "no", marginheight: "0", marginwidth: "0", src: google_maps_address_for(@booking.public_address)}

%div#questions.row{data: { bind: "with: questions" }}
  %div.span8.offset2
    %h3 Ask a question

    = simple_form_for [ @booking, @booking.questions.build ], html: { style: "padding-top: 20px; border-top: 1px solid #eee", data: { bind: "with: newQuestion, submit: newQuestion.save" }} do |f|
      %div.row
        %div.span5
          = f.input :body, label: false, input_html: { placeholder: "Question", class: "plain", style: "height: 80px", data: { bind: "value: body, valueUpdate: 'afterkeydown'" } }
        %div.span2
          = f.input :topic, as: :select, label: false, collection: Question::Topics::COLLECTION, include_blank: "Topic", input_html: { data: { bind: "value: topic" } }
        %div.span1
          = f.button :submit, value: "Ask", data: { bind: "enable: valid" }

    %ul.unstyled{data: { bind: "foreach: collection" }}
      %li.row{style: "padding-top: 20px; border-top: 1px solid #eee"}
        %div.span1.header-avatar.mini
          = ko_avatar_of "user"
        %div.span7
          %ul.unstyled
            %li{style: "margin-bottom: 5px"}
              %small{style: "color: #FFA733", data: { bind: "html: topic_translated" }}
              %p{style: "margin-bottom: 2px;", data: { bind: "html: body" }}
              %small.muted{style: "font-size: 12px;"}
                Asked by
                %span{data: { bind: "html: user.display_name" }}
                at
                %span{data: { bind: "html: updated_at" }}
            / ko foreach: question_responses
            %li{style: "margin-bottom: 5px"}
              %p{style: "margin-bottom: 2px;", data: { bind: "html: body" }}
              %small.muted{style: "font-size: 12px;"}
                Response by
                %span{data: { bind: "html: user.display_name" }}
                at
                %span{data: { bind: "html: updated_at" }}
            / /ko
            %li
              = simple_form_for QuestionResponse.new, url: "", html: { style: "margin-bottom: 0", data: { bind: "with: newResponse, submit: newResponse.save, attr: { action: question_reply_path, id: 'new_question_response_' + id }" }} do |f|
                %div.row
                  %div.span6= f.input :body, label: false, as: :string, input_html: { placeholder: "Reply", data: { bind: "value: body, valueUpdate: 'afterkeydown'" }}
                  %div.span1= f.button :submit, value: "Reply", data: { bind: "enable: valid" }